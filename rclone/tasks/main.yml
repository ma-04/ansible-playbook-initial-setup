- name: Install required packages
  ansible.builtin.package:
    name: '{{ item }}'
    state: present
  become: true
  with_items:
    - curl
    - unzip
    - man-db

- name: Handle stable version number
  when:
    - rclone_version | length == 0 or rclone_version == "0.0.0"
    - rclone_release == 'stable'
  block:
    - name: Check latest stable rclone version number
      ansible.builtin.uri:
        url: https://downloads.rclone.org/version.txt
        return_content: true
      register:
        rclone_latest_version
      check_mode: false
    - name: Set variable to latest stable version number
      ansible.builtin.set_fact:
        rclone_version: "{{ rclone_latest_version.content | replace('rclone v', '', 1) | trim }}"
        
- name: install
  ansible.builtin.include_tasks: install.yml
  when: rclone_install | default(true)

- name: create rclone config directory
  ansible.builtin.file:
    path: /home/{{ ansible_user_id }}/.config/rclone/
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0755

- name: copy rclone config file
  ansible.builtin.copy:
    src: files/rclone.conf
    dest: /home/{{ ansible_user_id }}/.config/rclone/rclone.conf
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0600

- name: create rclone systemd service directory
  ansible.builtin.file:
    path: /home/{{ ansible_user_id }}/.config/systemd/user/
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0755

- name: copy rclone systemd service file
  ansible.builtin.copy:
    src: files/rclone.service
    dest: /home/{{ ansible_user_id }}/.config/systemd/user/rclone@.service
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0644

- name: create rclone mount folder
  ansible.builtin.file:
    path: /home/{{ ansible_user_id }}/{{ item }}
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0755
  with_items:
    - "{{ rclone_services }}"
  when: rclone_services | length > 0

- name: create individual mount point
  ansible.builtin.file:
    path: /home/{{ ansible_user_id }}/mnt/{{ item }}
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0755
  with_items:
    - "{{ rclone_services }}"


- name: fuse allow others
  ansible.builtin.lineinfile:
    line: "user_allow_other"
    path: /etc/fuse.conf
  become: true
  when: rclone_fuse_allow_others == true

- name: reload rclone systemd service
  ansible.builtin.systemd:
    daemon_reload: yes
    scope: user
    
- name: enable rclone systemd service
  systemd:
    name: rclone@{{ item }}
    enabled: yes
    state: started
    daemon_reload: yes
    scope: user
  with_items:
    - "{{ rclone_services }}"