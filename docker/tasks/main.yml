- include_tasks: docker-compose.yml

- name: Ensure old versions of Docker are not installed.
  package:
    name:
      - docker
      - docker-engine
    state: absent

- name: install required packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - gnupg
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: present
    update_cache: true
    install_recommends: true
  become: true
  
- name: add docker apt key
  ansible.builtin.shell: curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
  become: true

- name: modify docker gpg key permission
  ansible.builtin.file:
    path: /etc/apt/keyrings/docker.gpg
    mode: '644'
    owner: root
    group: root
  become: true

- name: add docker repository to docker.list
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/docker.list
    line: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable"
    state: present
    create: true
  become: true

- name: update apt cache
  ansible.builtin.apt:
    update_cache: yes
  become: true

- name: install docker and its dependencies
  become: true
  ansible.builtin.apt:
    pkg:
      - iptables
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: install python sdk
  become_user: "{{ ansible_user_id }}"
  pip:
    name: "{{ item }}"
    state: present
  loop:
    - docker

- name: copy docker daemon config
  when: wg_docker_integrations == false
  ansible.builtin.template:
    src: files/daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: '644'
    owner: root
    group: root
  become: true

- include_tasks: wg_docker_integrations.yml
  when: wg_docker_integrations == true

- name: start and enable containerd daemon
  become: true
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - docker
    - containerd

- name: add user to docker group
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes
  become: true