
- name: enable ip_forwardning
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: 1
    sysctl_set: true
    reload: yes
  become: true
  become_method: sudo
  notify: restart sysctl
  loop:
    - net.ipv4.ip_forward
    - net.ipv6.conf.all.forwarding
    - net.ipv4.ip_nonlocal_bind
    - net.ipv6.ip_nonlocal_bind
  
- name: install wireguard
  ansible.builtin.apt:
    name: "{{ item }}"
    install_recommends: yes
    state: present
    autoclean: true
  become: true
  loop:
    - wireguard
    - wireguard-tools

- name: ensure wireguard kernel module is loaded
  ansible.builtin.modprobe:
    name: wireguard
    state: present
  become: true

- name: ensure wg-quick@wg-server.service is stopped
  ansible.builtin.service:
    name: wg-quick@wg-server.service
    state: stopped
  become: true

- name: copy wireguard config
  ansible.builtin.copy:
    src: files/{{ inventory_hostname }}.conf
    dest: /etc/wireguard/wg-server.conf
    owner: root
    group: root
    mode: 0600
  become: true
  notify:
    - restart wg-server

- name: ensure wg-quick@wg-server.service is started and enabled at boot
  ansible.builtin.service:
    name: wg-quick@wg-server.service
    state: started
    enabled: yes
  become: true

- name: get wireguard ip for host from wg-server.conf file
  ansible.builtin.shell: (cat /etc/wireguard/wg-server.conf | grep Address | awk '{print $3}' | awk -F/ '{print $1}')
  register: wireguard_ip
  become: true
## use {{ wireguard_ip.stdout }} to get a ip range

- name: wireguard ip
  debug:
    msg: "wireguard_ip {{ wireguard_ip.stdout }}"
    
- include_tasks: internal_hostname_resolve.yml
  when: (internal_hostname_resolve == true) and (domain != "")
